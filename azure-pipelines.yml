trigger:
- main

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'docker'
        repository: 'ta2199/nodejs'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'v1'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: ubuntu-latest
    environment: 'dev.default' #customize with your environment
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'sample'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: 'sample'
              dockerRegistryEndpoint: 'docker'
              
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                git clone https://github.com/tuananh2508/pipelines-javascript-docker
                cd pipelines-javascript-docker
                ls
                pwd

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'sample'
              namespace: 'default'
              manifests: 'pipelines-javascript-docker/deployment.yaml'
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'sample'
              namespace: 'default'
              manifests: 'pipelines-javascript-docker/service.yaml'

          - task: KubernetesManifest@0
            displayName: ScaleDown
            inputs:
              action: 'scale'
              kubernetesServiceConnection: 'sample'
              namespace: 'default'
              kind: 'deployment'
              name: 'nodejs-deployment'
              replicas: '1'
          - task: KubernetesManifest@0
            displayName: ScaleDown
            inputs:
              action: 'delete'
              kubernetesServiceConnection: 'sample'
              namespace: 'default'
              arguments: 'deployment nodejs-deployment'